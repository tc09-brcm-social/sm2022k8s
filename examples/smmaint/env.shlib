#!/bin/bash
#
## Warning: for variables that are meant to reference other variables
##          use single quotes to allow the referenced variables to be
##          resolved at later time.
#
# To overwrite file "../../env.shlib"
#CLOUD=

#
# To overwrite file "../../base/env.shlib"
#
SMMAINTREL=smmaint
#SMVER="--version=1.0.3020"
OP="$MYPATH/backupPS.sh"
	# operation script used to create values.yaml
OPDESC="Ran XPSExport to back up the policy store"
	# Operation Description
#S3URI="s3://..."
	# AWS S3 Storage in s3:// format
#S3REGION="us-east-1"
	# S3 Region
#S3ID="smsecrete encrypted S3ID"
#S3KEY="smsecrete encrypted S3 Access Key"

#
## Do not change lines below
#

#
## reset ../../env.shlib
#
resetroot() {
    git checkout "$MYPATH/../../env.shlib"
    }
#
## reset ../../base/env.shlib
#
resetbase() {
    git checkout "$MYPATH/../../base/env.shlib"
    }
#
## modify ../../env.shlib if necessary
#
envroot() {
    x=$(bash "$MYPATH/../../tools/setkeyvalue.sh" "$MYPATH/../../env.shlib" "$1" "$2")
    >&2 echo "$1"
    }
#
## modify ../../base/env.shlib if necessary
#
envbase() {
    x=$(bash "$MYPATH/../../tools/setkeyvalue.sh" "$MYPATH/../../base/env.shlib" "$1" "$2")
    >&2 echo "$1"
    }

#
## relexist
#
relexist() {
    local _ns=$1
    local _rel=$2

    helm list -n "$_ns" -o json | jq --arg s "$_rel" '.[] | select(.name == $s)'
    }
